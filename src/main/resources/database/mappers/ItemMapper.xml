<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper는 테이블 별로 하나씩 만들 거다. namespace는 중복되면 안됨 -->
<!-- 따라서 namespace의 이름은 DAO가 존재하는 패키지의 명을 포함하여 작성해줌 -->
<mapper namespace="com.sol.app.product.ItemDAO">
	
	<!-- <select id="getList" resultType="ItemDTO">
		SELECT * FROM ITEMS ORDER BY ITEM_ID DESC
	</select> -->
	
	<update id="commentUpdate" parameterType="ItemCommentsDTO">
		UPDATE	COMMENTS
		SET		BOARDCONTENTS = #{boardContents}
		WHERE	BOARDNUM = #{boardNum}
	</update>
	
	<delete id="commentDelete" parameterType="ItemCommentsDTO">
		DELETE FROM COMMENTS
		WHERE BOARDNUM = #{boardNum}
	</delete>
	
	<select id="commentTotalCount" parameterType="ItemCommentsPager" resultType="java.lang.Long">
		SELECT	COUNT(BOARDNUM)
		FROM	COMMENTS
		WHERE	ITEM_ID = #{item_id}
	</select>
	
	<select id="commentList" parameterType="ItemCommentsPager" resultType="ItemCommentsDTO">
		SELECT	*
		FROM	
		(
			SELECT	ROWNUM r, c.*
			FROM	
			(
				SELECT		*
				FROM		COMMENTS
				WHERE		ITEM_ID = #{item_id}
				ORDER BY	BOARDNUM DESC
			) c
		)
		WHERE r BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<insert id="commentAdd" parameterType="ItemCommentsDTO">
		INSERT INTO COMMENTS (BOARDNUM, ITEM_ID, BOARDWRITER, BOARDCONTENTS)
		VALUES (COMMENTS_SEQ.NEXTVAL, #{item_id}, #{boardWriter}, #{boardContents})
	</insert>
	
	<insert id="addWish" parameterType="Map">
		INSERT INTO WISHLIST
		VALUES (#{item_id}, #{member_id})
	</insert>
	
	<select id="countWishList" parameterType="MemberDTO" resultType="java.lang.Long">
		SELECT	COUNT(ITEM_ID)
		FROM	WISHLIST
		WHERE	MEMBER_ID = #{member_id}
	</select>
	
	<select id="wishList" parameterType="Map" resultType="ItemDTO">
		SELECT * FROM 
		(	SELECT 		ROWNUM r, i.*
			FROM	(	SELECT 		*
						FROM 		ITEMS
						<where>		
									ITEM_ID > 0	AND ITEM_ID IN(
										SELECT	ITEM_ID
										FROM	WISHLIST
										WHERE  	MEMBER_ID = #{memberDTO.member_id}
									)
						</where>
						ORDER BY	ITEM_ID DESC	) i)
		WHERE	r BETWEEN #{pager.startRow} AND #{pager.lastRow}
	</select>
	
	<delete id="deleteWishList" parameterType="Map">
		DELETE 	WISHLIST
		WHERE	MEMBER_ID = #{member_id}
				AND ITEM_ID IN
		<foreach collection="item_ids" item="item_id" open="(" close=")" separator=",">
			#{item_id}
		</foreach>
	</delete>
	
	<select id="getDetail" resultMap="detailMap" parameterType="ItemDTO">
		SELECT	*
		FROM	ITEMS i LEFT JOIN ITEMFILES f
				ON i.ITEM_ID = f.ITEM_ID
		WHERE 	i.ITEM_ID = #{item_id}
	</select>
	
	<resultMap type="ItemDTO" id="detailMap">
		<id column="ITEM_ID" property="item_id"/>
		<result column="ITEM_NAME" property="item_name"/>
		<result column="ITEM_DETAIL" property="item_detail"/>
		<result column="ITEM_RATE" property="item_rate"/>
		
		<collection property="fileDTOs" javaType="List" ofType="ItemFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
			<result column="ORINAME" property="oriName"/>
		</collection>
	</resultMap>
	
	<select id="getNum" resultType="java.lang.Long">
		SELECT ITEMS_SEQ.NEXTVAL FROM DUAL
	</select>
	
	<insert id="add" parameterType="ItemDTO">
		INSERT INTO ITEMS
		VALUES(#{item_id}, #{item_name} ,#{item_detail} ,#{item_rate})
	</insert>
	
	<insert id="addFile" parameterType="ItemFileDTO">
		INSERT INTO ITEMFILES
		VALUES (FILE_SEQ.NEXTVAL, #{item_id}, #{fileName}, #{oriName})
	</insert>
	
	<delete id="delete" parameterType="ItemDTO">
		DELETE ITEMS WHERE ITEM_ID = #{item_id}
	</delete>
	
	<update id="update" parameterType="ItemDTO">
		UPDATE ITEMS SET
			ITEM_NAME = #{item_name}
		,	ITEM_DETAIL = #{item_detail}
		,	ITEM_RATE = #{item_rate}
		WHERE ITEM_ID = #{item_id} 
	</update>
	
	<select id="getList" resultType="ItemDTO" parameterType="Pager">
		<![CDATA[
		]]>
			SELECT * FROM 
			(	SELECT 		ROWNUM r, i.*
				FROM	(	SELECT 		*
							FROM 		ITEMS
							<where>		
										ITEM_ID > 0	
								<choose>
									<when test="kind == 'k1'">
										AND ITEM_NAME LIKE '%'||#{search}||'%'
									</when>
									<otherwise>
										AND ITEM_DETAIL LIKE '%'||#{search}||'%'
									</otherwise>
								</choose>
							</where>
							ORDER BY	ITEM_ID DESC	) i)
			WHERE	r BETWEEN #{startRow} AND #{lastRow}
	</select>
	
	<select id="countList" resultType="java.lang.Long" parameterType="Pager">
		SELECT COUNT(ITEM_ID) FROM ITEMS
		<where>		
				ITEM_ID > 0	
		<choose>
			<when test="kind == 'k1'">
				AND ITEM_NAME LIKE '%'||#{search}||'%'
			</when>
			<otherwise>
				AND ITEM_DETAIL LIKE '%'||#{search}||'%'
			</otherwise>
		</choose>
	</where>
	</select>
	
	<select id="countSearch" parameterType="Pager" resultType="java.lang.Long">
		SELECT COUNT(ITEM_ID)
		FROM ITEMS
		<where>		
			ITEM_ID > 0	
			<choose>
				<when test="kind == 'k1'">
					AND ITEM_NAME LIKE '%'||#{search}||'%'
				</when>
				<otherwise>
					AND ITEM_DETAIL LIKE '%'||#{search}||'%'
				</otherwise>
			</choose>
		</where>
	</select>
	
</mapper>